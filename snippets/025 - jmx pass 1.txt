11:00:16.695 [info] Resetting nodes to fresh state
11:00:16.695 [info] Running: git --git-dir="/Users/joe/riak_test_ee/.git" --work-tree="/Users/joe/riak_test_ee/" reset HEAD --hard
11:00:17.385 [info] Running: git --git-dir="/Users/joe/riak_test_ee/.git" --work-tree="/Users/joe/riak_test_ee/" clean -fd
11:00:17.595 [info] Cleaning up lingering pipe directories
11:00:17.600 [warning] rt:set_backend doesn't recognize undefined as a legit backend, using the default.
11:00:17.685 [info] Checking for presence of java
11:00:17.697 [info] jmx_verify prereqs: [{"java",true}]
11:00:17.697 [notice] Running Test jmx_verify
11:00:18.705 [info] Test Runner `uname -a` : Darwin Black13.local 12.3.0 Darwin Kernel Version 12.3.0: Sun Jan  6 22:37:10 PST 2013; root:xnu-2050.22.13~1/RELEASE_X86_64 x86_64

11:00:18.705 [info] Riak path: "/Users/joe/riak_test_ee"
11:00:18.723 [info] rtdev:update_app_config_file(/Users/joe/riak_test_ee/current/dev/dev1/etc/app.config, [{riak_jmx,[{enabled,true},{port,80}]}])
11:00:18.737 [info] Running: /Users/joe/riak_test_ee/current/dev/dev1/bin/riak start
11:00:22.981 [debug] Supervisor inet_gethost_native_sup started undefined at pid <0.111.0>
11:00:22.982 [debug] Supervisor kernel_safe_sup started inet_gethost_native:start_link() at pid <0.110.0>
11:00:22.999 [info] Wait until 'dev1@127.0.0.1' is pingable
11:00:23.003 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/hashtree_intercepts.erl on node dev1@127.0.0.1
11:00:23.015 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/intercept.erl on node dev1@127.0.0.1
11:00:23.067 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_core_ring_manager_intercepts.erl on node dev1@127.0.0.1
11:00:23.072 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_core_vnode_proxy_sup_intercepts.erl on node dev1@127.0.0.1
11:00:23.078 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_get_fsm_intercepts.erl on node dev1@127.0.0.1
11:00:23.083 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_put_fsm_intercepts.erl on node dev1@127.0.0.1
11:00:23.089 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_vnode_intercepts.erl on node dev1@127.0.0.1
11:00:23.115 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_pipe_vnode_intercepts.erl on node dev1@127.0.0.1
11:00:23.123 [info] Wait until 'dev1@127.0.0.1' is pingable
11:00:23.124 [info] Wait until the ring manager is up on 'dev1@127.0.0.1'
11:00:23.125 [info] Check 'dev1@127.0.0.1' is a singleton
11:00:23.150 [info] Deployed nodes: ['dev1@127.0.0.1']
11:00:23.150 [info] Waiting for services [riak_kv] to start on ['dev1@127.0.0.1'].
11:00:52.177 [info] calling riak_jmx:stop() to reset retry counters
11:00:52.186 [info] loading lager backend on node
11:00:52.188 [info] Now we're capturing logs on the node, let's start jmx
11:00:52.188 [info] calling riak_jmx:start() to get these retries started
11:01:32.196 [info] It can fail, it can fail 10 times
11:01:32.231 [info] Stopping riak on 'dev1@127.0.0.1'
11:01:42.233 [info] Running: /Users/joe/riak_test_ee/current/dev/dev1/bin/riak stop
11:01:45.993 [info] Testing application:stop()
11:01:45.994 [info] Riak path: "/Users/joe/riak_test_ee"
11:01:46.002 [info] rtdev:update_app_config_file(/Users/joe/riak_test_ee/current/dev/dev1/etc/app.config, [{riak_jmx,[{enabled,true},{port,41111}]}])
11:01:46.012 [info] Running: /Users/joe/riak_test_ee/current/dev/dev1/bin/riak start
11:01:50.159 [info] Wait until 'dev1@127.0.0.1' is pingable
11:01:50.160 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/hashtree_intercepts.erl on node dev1@127.0.0.1
11:01:50.170 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/intercept.erl on node dev1@127.0.0.1
11:01:50.221 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_core_ring_manager_intercepts.erl on node dev1@127.0.0.1
11:01:50.227 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_core_vnode_proxy_sup_intercepts.erl on node dev1@127.0.0.1
11:01:50.233 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_get_fsm_intercepts.erl on node dev1@127.0.0.1
11:01:50.238 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_put_fsm_intercepts.erl on node dev1@127.0.0.1
11:01:50.244 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_vnode_intercepts.erl on node dev1@127.0.0.1
11:01:50.270 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_pipe_vnode_intercepts.erl on node dev1@127.0.0.1
11:01:50.279 [info] Wait until 'dev1@127.0.0.1' is pingable
11:01:50.279 [info] Wait until the ring manager is up on 'dev1@127.0.0.1'
11:01:50.280 [info] Check 'dev1@127.0.0.1' is a singleton
11:01:50.281 [info] Deployed nodes: ['dev1@127.0.0.1']
11:01:50.281 [info] Waiting for services [riak_kv] to start on ['dev1@127.0.0.1'].
11:01:59.308 [info] Wait until nodes are ready : ['dev1@127.0.0.1']
11:02:14.310 [info] checking for riak_jmx.jar running.
11:02:34.702 [info] checking for riak_jmx.jar not running.
11:02:34.735 [info] Stopping riak on 'dev1@127.0.0.1'
11:02:44.737 [info] Running: /Users/joe/riak_test_ee/current/dev/dev1/bin/riak stop
11:02:48.471 [info] Riak path: "/Users/joe/riak_test_ee"
11:02:48.478 [info] rtdev:update_app_config_file(/Users/joe/riak_test_ee/current/dev/dev1/etc/app.config, [{riak_jmx,[{enabled,true},{port,41111}]}])
11:02:48.489 [info] Running: /Users/joe/riak_test_ee/current/dev/dev1/bin/riak start
11:02:52.656 [info] Wait until 'dev1@127.0.0.1' is pingable
11:02:52.657 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/hashtree_intercepts.erl on node dev1@127.0.0.1
11:02:52.668 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/intercept.erl on node dev1@127.0.0.1
11:02:52.719 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_core_ring_manager_intercepts.erl on node dev1@127.0.0.1
11:02:52.724 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_core_vnode_proxy_sup_intercepts.erl on node dev1@127.0.0.1
11:02:52.729 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_get_fsm_intercepts.erl on node dev1@127.0.0.1
11:02:52.735 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_put_fsm_intercepts.erl on node dev1@127.0.0.1
11:02:52.740 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_kv_vnode_intercepts.erl on node dev1@127.0.0.1
11:02:52.765 [debug] Compiling and loading file /Users/joe/dev/basho/riak_test/intercepts/riak_pipe_vnode_intercepts.erl on node dev1@127.0.0.1
11:02:52.775 [info] Wait until 'dev1@127.0.0.1' is pingable
11:02:52.775 [info] Wait until the ring manager is up on 'dev1@127.0.0.1'
11:02:52.776 [info] Check 'dev1@127.0.0.1' is a singleton
11:02:52.776 [info] Deployed nodes: ['dev1@127.0.0.1']
11:02:52.776 [info] Waiting for services [riak_kv] to start on ['dev1@127.0.0.1'].
11:03:01.805 [info] Wait until nodes are ready : ['dev1@127.0.0.1']
11:03:42.309 [info] perform 5 x  PUT and a GET to increment the stats
11:03:42.310 [info] as the stat system only does calcs for > 5 readings
11:04:22.968 [info] node_gets: 0 -> 10 (expected 10)
11:04:22.969 [info] node_puts: 0 -> 5 (expected 5)
11:04:22.969 [info] node_gets_total: 0 -> 10 (expected 10)
11:04:22.969 [info] node_puts_total: 0 -> 5 (expected 5)
11:04:22.969 [info] vnode_gets: 0 -> 30 (expected 30)
11:04:22.969 [info] vnode_puts: 0 -> 15 (expected 15)
11:04:22.970 [info] vnode_gets_total: 0 -> 30 (expected 30)
11:04:22.970 [info] vnode_puts_total: 0 -> 15 (expected 15)
11:04:22.970 [info] Make PBC Connection
11:05:03.469 [info] pbc_connects_total: 0 -> 1 (expected 1)
11:05:03.469 [info] pbc_connects: 0 -> 1 (expected 1)
11:05:03.470 [info] pbc_active: 0 -> 1 (expected 1)
11:05:03.470 [info] Force Read Repair
11:05:44.104 [info] read_repairs_total: 0 -> 0 (expected 0)
11:05:44.104 [info] read_repairs: 0 -> 0 (expected 0)
11:06:24.543 [info] read_repairs_total: 0 -> 1 (expected 1)
11:06:24.543 [info] read_repairs: 0 -> 1 (expected 1)
11:06:24.544 [notice] jmx_verify Test Run Complete

Test Results:
jmx_verify-bitcask: pass
---------------------------------------------
0 Tests Failed
1 Tests Passed
That's 100.0% for those keeping score